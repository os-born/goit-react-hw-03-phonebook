{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/FilterField/FilterField.js","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/FilterField/FilterField.module.css"],"names":["module","exports","initialState","name","number","ContactForm","state","onHandleSubmit","e","preventDefault","props","onSubmit","setState","onHandleChange","currentTarget","value","this","className","s","contactForm","contactForm__label","type","onChange","contactForm__input","pattern","title","required","contactForm__btn","Component","ContactList","contacts","onHandleDelete","filteredContactsByInputValue","contactList","map","id","contactList__item","contactList__itemText","deleteBtn","onClick","FilterField","searchQuery","filterField__conteiner","filterField__label","filterField__input","App","filter","addContact","arrNames","contact","includes","alert","uuidv4","deleteContact","prev","onChangeFilter","normalizedInputValue","toLowerCase","trim","savedContacts","localStorage","getItem","parsedSavedContacts","JSON","parse","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f982417.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactList_deleteBtn__37cP2\",\"contactList\":\"ContactList_contactList__1JNDB\",\"contactList__item\":\"ContactList_contactList__item__3yCmW\",\"contactList__itemText\":\"ContactList_contactList__itemText__1bCIm\"};","import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onHandleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.setState({ ...initialState });\n  };\n\n  onHandleChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onHandleSubmit} className={s.contactForm}>\n        <label className={s.contactForm__label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onHandleChange}\n            className={s.contactForm__input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.contactForm__label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.onHandleChange}\n            className={s.contactForm__input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.contactForm__btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({\n  contacts,\n  onHandleDelete,\n  filteredContactsByInputValue,\n}) => {\n  return (\n    <ul className={s.contactList}>\n      {filteredContactsByInputValue\n        ? filteredContactsByInputValue.map(({ id, name, number }) => (\n            <li key={id} className={s.contactList__item}>\n              <p className={s.contactList__itemText}>\n                {name}: {number}\n              </p>\n              <button\n                type=\"button\"\n                className={s.deleteBtn}\n                onClick={() => {\n                  onHandleDelete(id);\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          ))\n        : contacts.map(({ id, name, number }) => (\n            <li key={id} className={s.contactList__item}>\n              <p className={s.contactList__itemText}>\n                {name}: {number}\n              </p>\n              <button\n                type=\"button\"\n                className={s.deleteBtn}\n                onClick={() => {\n                  onHandleDelete(id);\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onHandleDelete: PropTypes.func,\n  filteredContactsByInputValue: PropTypes.array,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './FilterField.module.css';\nimport PropTypes from 'prop-types';\n\nconst FilterField = ({ searchQuery, onChange }) => {\n  return (\n    <div className={s.filterField__conteiner}>\n      <label className={s.filterField__label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={searchQuery}\n          onChange={onChange}\n          className={s.filterField__input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nFilterField.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n};\n\nexport default FilterField;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport FilterField from './FilterField/FilterField';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const arrNames = this.state.contacts.map(contact => contact.name);\n\n    if (!arrNames.includes(name)) {\n      const contact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n      this.setState({\n        contacts: [...this.state.contacts, contact],\n      });\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  deleteContact = id =>\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== id),\n    }));\n\n  onChangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filteredContactsByInputValue = () => {\n    const { contacts, filter } = this.state;\n    const normalizedInputValue = filter.toLowerCase().trim();\n    if (normalizedInputValue !== '') {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedInputValue),\n      );\n    }\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n    const parsedSavedContacts = JSON.parse(savedContacts);\n    if (parsedSavedContacts) {\n      this.setState({ contacts: parsedSavedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      addContact,\n      onChangeFilter,\n      deleteContact,\n      filteredContactsByInputValue,\n    } = this;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n        <h2>Contacts</h2>\n        <FilterField\n          searchQuery={this.state.filter}\n          onChange={onChangeFilter}\n        />\n        <ContactList\n          contacts={this.state.contacts}\n          onHandleDelete={deleteContact}\n          filteredContactsByInputValue={filteredContactsByInputValue()}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3ko2O\",\"contactForm__label\":\"ContactForm_contactForm__label__jqp6o\",\"contactForm__input\":\"ContactForm_contactForm__input__3MRDK\",\"contactForm__btn\":\"ContactForm_contactForm__btn__35pFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterField__conteiner\":\"FilterField_filterField__conteiner__XfMx-\",\"filterField__label\":\"FilterField_filterField__label__3DnsR\",\"filterField__input\":\"FilterField_filterField__input__3jmVr\"};"],"sourceRoot":""}